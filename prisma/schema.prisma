// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  username    String?
  email       String?    @unique
  password    String?
  phoneNumber String?    @unique
  address     String?
  role        Role?
  status      StatusUser @default(INIT)
  gender      Gender?
  dateOfBirth DateTime?  @db.Date
  avatar      String?
  isActive    Boolean    @default(true)
  provider    String?
  auth        Auth?
  salesman    Salesman?
  purchaser   Purchaser?
}

enum Role {
  ADMIN
  MANAGER
  SALESMAN
  PURCHASER
}

enum StatusUser {
  INIT
  BANNED
  VERIFIED
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

model Auth {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  hashedRefreshToken String?
  userId             String   @unique @db.ObjectId
  user               User     @relation(fields: [userId], references: [id])
}

model Salesman {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @unique @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
}

model Purchaser {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @unique @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
}
